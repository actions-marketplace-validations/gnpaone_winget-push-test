name: 'Winget Push Test'
description: 'Push packages to a test winget repository using Github workflow instead of pushing to the main winget repository via workflow'
inputs:
  url:
    description: 'Package url'
  urlarm:
    description: 'Package url (arm)'
  url32:
    description: 'Package url (32-bit)'
  url64:
    description: 'Package url (64-bit)'
  urlarmhf:
    description: 'Package url (armhf)'
  urlarm64:
    description: 'Package url (arm64)'
  version:
    description: 'Version of your winget package. Recommended to not keep any letter behind version number'
    required: true
  token:
    description: 'Personal access token (auto-populated) to submit package to winget repo'
    required: true
  packageid:
    description: 'Package ID of your winget package'
    required: true
  user:
    description: 'Github username where the test winget repo is created'
    required: true
    default: microsoft
  repo:
    description: 'Name of winget test repository'
    required: true
    default: winget-pkgs
  forcearch:
    description: 'Force the submitting architecture for the given package URLs'
    default: false
runs:
  using: "composite"
  steps:
    - if: ${{ inputs.url != "" && inputs.urlarm == "" && inputs.url64 == "" && inputs.urlarm64 == "" && inputs.forcearch == 'false' }}
      run: |
        $url="${{ inputs.url }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url != "" && inputs.urlarm != "" && inputs.url64 == "" && inputs.urlarm64 == "" && inputs.forcearch == 'false' }}
      run: |
        $url="${{ inputs.url }}"
        $urlarm="${{ inputs.urlarm }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url" "$urlarm" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url == "" && inputs.urlarm == "" && inputs.url64 != "" && inputs.urlarm64 == "" && inputs.forcearch == 'false' }}
      run: |
        $url32="${{ inputs.url32 }}"
        $url64="${{ inputs.url64 }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url == "" && inputs.urlarm != "" && inputs.url64 != "" && inputs.urlarm64 == "" && inputs.forcearch == 'false' }}
      run: |
        $url32="${{ inputs.url32 }}"
        $url64="${{ inputs.url64 }}"
        $urlarm="${{ inputs.urlarm }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" "$urlarm" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url == "" && inputs.urlarm == "" && inputs.url64 != "" && inputs.urlarm64 != "" && inputs.forcearch == 'false' }}
      run: |
        $url32="${{ inputs.url32 }}"
        $url64="${{ inputs.url64 }}"
        $urlarmhf="${{ inputs.urlarmhf }}"
        $urlarm64="${{ inputs.urlarm64 }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" "$urlarmhf" "$urlarm64" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url == "" && inputs.urlarm == "" && inputs.url64 != "" && inputs.urlarm64 == "" && inputs.forcearch == 'true' }}
      run: |
        $url32="${{ inputs.url32 }}"
        $url64="${{ inputs.url64 }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32|x86" "$url64|x64" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
    - if: ${{ inputs.url == "" && inputs.urlarm == "" && inputs.url64 != "" && inputs.urlarm64 != "" && inputs.forcearch == 'true' }}
      run: |
        $url32="${{ inputs.url32 }}"
        $url64="${{ inputs.url64 }}"
        $urlarmhf="${{ inputs.urlarmhf }}"
        $urlarm64="${{ inputs.urlarm64 }}"
        $version="${{ inputs.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ inputs.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ inputs.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32|x86" "$url64|x64" "$urlarmhf|arm" "$urlarm64|arm64" -v $version -t "${{ inputs.token }}" -s "${{ inputs.packageid }}"
      shell: powershell
branding:
  icon: 'log-in'
  color: 'orange'
