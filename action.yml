name: 'Winget Push Test'
description: 'Push winget packages to a test winget repository using Github workflow instead of pushing to the main winget repository (https://github.com/microsoft/winget-pkgs) via workflow'
inputs:
  url:
    description: 'Package url'
  urlarm:
    description: 'Package url (arm)'
  url32:
    description: 'Package url (32-bit)'
  url64:
    description: 'Package url (64-bit)'
  urlarmhf:
    description: 'Package url (armhf)'
  urlarm64:
    description: 'Package url (arm64)'
  version:
    description: 'Version of your winget package. Recommended to not keep any letter behind version number'
    required: true
  token:
    description: 'Personal access token (auto-populated) to submit package to winget repo'
    required: true
    default: ${{ secrets.GITHUB_TOKEN }}
  packageid:
    description: 'Package ID of your winget package'
    required: true
  user:
    description: 'Github username where the test winget repo is created'
    required: true
    default: microsoft
  repo:
    description: 'Name of winget test repository'
    required: true
    default: winget-pkgs
  forcearch:
    description: 'Force the submitting architecture for the given package URLs'
    default: false
runs:
  using: "composite"
  steps:
    - run: |
        $url="${{ steps.single.with.url }}"
        $version="${{ steps.single.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.single.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.single.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url" -v $version -t "${{ steps.single.with.token }}" -s "${{ steps.single.with.packageid }}"
      shell: pwsh
    - run: |
        $url="${{ steps.singlearm.with.url }}"
        $urlarm="${{ steps.singlearm.with.urlarm }}"
        $version="${{ steps.singlearm.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.singlearm.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.singlearm.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url" "$urlarm" -v $version -t "${{ steps.singlearm.with.token }}" -s "${{ steps.singlearm.with.packageid }}"
      shell: pwsh
    - run: |
        $url32="${{ steps.multi.with.url32 }}"
        $url64="${{ steps.multi.with.url64 }}"
        $version="${{ steps.multi.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.multi.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.multi.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" -v $version -t "${{ steps.multi.with.token }}" -s "${{ steps.multi.with.packageid }}"
      shell: pwsh
    - run: |
        $url32="${{ steps.multiarm.with.url32 }}"
        $url64="${{ steps.multiarm.with.url64 }}"
        $urlarm="${{ steps.multiarm.with.urlarm }}"
        $version="${{ steps.multiarm.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.multiarm.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.multiarm.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" "$urlarm" -v $version -t "${{ steps.multiarm.with.token }}" -s "${{ steps.multiarm.with.packageid }}"
      shell: pwsh
    - run: |
        $url32="${{ steps.multiarmmulti.with.url32 }}"
        $url64="${{ steps.multiarmmulti.with.url64 }}"
        $urlarmhf="${{ steps.multiarmmulti.with.urlarmhf }}"
        $urlarm64="${{ steps.multiarmmulti.with.urlarm64 }}"
        $version="${{ steps.multiarmmulti.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.multiarmmulti.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.multiarmmulti.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32" "$url64" "$urlarmhf" "$urlarm64" -v $version -t "${{ steps.multiarmmulti.with.token }}" -s "${{ steps.multiarmmulti.with.packageid }}"
      shell: pwsh
    - run: |
        $url32="${{ steps.multi.with.url32 }}"
        $url64="${{ steps.multi.with.url64 }}"
        $version="${{ steps.multi.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.multi.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.multi.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32|x86" "$url64|x64" -v $version -t "${{ steps.multi.with.token }}" -s "${{ steps.multi.with.packageid }}"
      shell: pwsh
    - run: |
        $url32="${{ steps.multiarmmulti.with.url32 }}"
        $url64="${{ steps.multiarmmulti.with.url64 }}"
        $urlarmhf="${{ steps.multiarmmulti.with.urlarmhf }}"
        $urlarm64="${{ steps.multiarmmulti.with.urlarm64 }}"
        $version="${{ steps.multiarmmulti.with.version }}"
        curl https://github.com/microsoft/winget-create/releases/latest/download/wingetcreate-self-contained.exe -O wingetcreate-self-contained.exe
        ./wingetcreate-self-contained.exe settings
        $pathToJson = "$env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json"
        $pathTest = Get-Content $pathToJson | ConvertFrom-Json
        $pathTest.WindowsPackageManagerRepository.owner = "${{ steps.multiarmmulti.with.user }}"
        $pathTest.WindowsPackageManagerRepository.name = "${{ steps.multiarmmulti.with.repo }}"
        $pathTest | ConvertTo-Json | set-content $pathToJson
        Copy-Item -Path $env:LOCALAPPDATA\Microsoft\WindowsPackageManagerManifestCreator\settings.json -Destination C:\settings.json -PassThru
        ./wingetcreate-self-contained.exe update -u "$url32|x86" "$url64|x64" "$urlarmhf|arm" "$urlarm64|arm64" -v $version -t "${{ steps.multiarmmulti.with.token }}" -s "${{ steps.multiarmmulti.with.packageid }}"
      shell: pwsh
branding:
  icon: 'log-in'
  color: 'orange'
